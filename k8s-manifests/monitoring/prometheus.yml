---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prom-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'mysql'
        static_configs:
          - targets:
            - "192.168.100.41:9100"
      - job_name: 'nfs'
        static_configs:
          - targets:
            - "192.168.100.30:9100"
      - job_name: 'k8s'
        static_configs:
          - targets:
            - "192.168.100.50:9100"
            - "192.168.100.51:9100"
            - "192.168.100.52:9100"
      - job_name: 'edge-router'
        static_configs:
          - targets:
            - "192.168.97.21:9100"
      - job_name: 'tor35'
        static_configs:
          - targets:
            - "192.168.100.1:9100"

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
    - name: prometheus
      port: 9090
      targetPort: prom-port
  selector:
    app: prometheus
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  ports:
    - name: alertmanager
      port: 9093
      targetPort: alert-port
  selector:
    app: alertmanager
  type: LoadBalancer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prom-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: managed-nfs-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alert-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: managed-nfs-storage

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      namespace: monitoring
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.9.2
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time=365d
            - --web.enable-lifecycle
            - --web.console.libraries=/usr/share/prometheus/console_libraries
            - --web.console.templates=/usr/share/prometheus/consoles
          ports:
            - name: prom-port
              containerPort: 9090
          volumeMounts:
            - name: prom-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prom-storage
              mountPath: /prometheus
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /-/healthy
              port: 9090
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /-/ready
              port: 9090
      volumes:
        - name: prom-config
          configMap:
            name: prom-config
        - name: prom-storage
          persistentVolumeClaim:
            claimName: prom-storage

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      namespace: monitoring
      labels:
        app: alertmanager
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.16.2
          ports:
            - name: alert-port
              containerPort: 9093
          volumeMounts:
            - name: alert-config
              mountPath: /etc/alertmanager/alertmanager.yml
              subPath: alertmanager.yml
            - name: alert-storage
              mountPath: /alertmanager
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /-/healthy
              port: 9093
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /-/ready
              port: 9093
      volumes:
        - name: alert-config
          secret:
            secretName: alert-secret
            optional: false
        - name: alert-storage
          persistentVolumeClaim:
            claimName: alert-storage
