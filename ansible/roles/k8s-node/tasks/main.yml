- name: Check number of CPU
  assert:
    that: "ansible_processor_count >= 2"
    fail_msg: "2 or more CPUs required"

- name: Check memory size
  assert:
    that: "ansible_memtotal_mb >= 2048"
    fail_msg: "2GB or more RAM required"

- name: Disable swap
  shell: swapoff -a
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Disable swap permanently
  lineinfile:
    path: /etc/fstab
    regexp: 'centos-swap'
    state: absent
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Check swap size
  assert:
    that: "ansible_swaptotal_mb <= 0"
    fail_msg: "Swap must be disabled"

- name: Copy firewalld service files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  tags:
    - k8s-node
  with_items:
    - {'src': 'templates/kubelet.xml', 'dest': '/etc/firewalld/services/kubelet.xml'}
  when: ansible_distribution == "CentOS"

- name: firewalld - Reload
  shell: firewall-cmd --reload
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: firewalld - Allow k8s services
  firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: yes
    state: enabled
  with_items:
    - "kubelet"
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Docker - Create /etc/docker
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Docker - Copy daemon.json
  copy:
    src: "templates/daemon.json"
    dest: "/etc/docker/daemon.json"
    mode: 0644
    owner: root
    group: root
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Docker - Create /etc/systemd/system/docker.service.d
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Docker - Restart Docker service
  systemd:
    name: docker.service
    daemon_reload: yes
    enabled: yes
    state: restarted
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Add Kubernetes repository
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - {'src': 'templates/kubernetes.repo', 'dest': '/etc/yum.repos.d/kubernetes.repo'}
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Disable SELinux
  shell: setenforce 0
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Disable SELinux permanently
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Install kubelet, kubeadm, kubectl
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    disable_excludes: kubernetes
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Start kubelet
  systemd:
    name: kubelet.service
    daemon_reload: yes
    enabled: yes
    state: restarted
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Copy /etc/sysctl.d/k8s.conf
  copy:
    src: "templates/k8s.conf"
    dest: "/etc/sysctl.d/k8s.conf"
    mode: 0644
    owner: root
    group: root
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Install kubeadm - Reload system configuration files
  shell: sysctl --system
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"

- name: Pull required images
  shell: kubeadm config images pull
  tags:
    - k8s-node
  when: ansible_distribution == "CentOS"
